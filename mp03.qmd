<div style="text-align: center;">
# Mini-Project #03: Do Proportional Electoral College Allocations Yield a More Representative Presidency?
</div>

![](https://www.nbc.com/sites/nbcblog/files/styles/scale_862/public/2024/10/gettyimages-641457444.jpg)
<div style="text-align: center;">
## Introduction 
</div>

In this project, I will be writing a *political fact-check* and investigate the claim that the [US Electoral College](https://en.wikipedia.org/wiki/United_States_Electoral_College) systematically biases election results away from the popular vote. 

Before we begin, we must download the code [here](https://www.nbc.com/sites/nbcblog/files/styles/scale_862/public/2024/10/gettyimages-641457444.jpg). This code shows us how many votes each candidate got througout the years, for both the Presidential Elections and the House of Representatives Elections. 



<details>
  <summary>**Click here to see how the data was downloaded into R**</summary>
```{r}
library(tidyverse)
library(readxl)
library(readr)

X1976_2022_house <- read_csv("1976-2022-house.csv")

X1976_2020_president <- read_csv("1976-2020-president.csv")



```
</details>

Now, I must download all the shape files into R. 

<details>
  <summary>**Click here to see how the data was downloaded into R**</summary>
```{r, eval=FALSE, echo=TRUE}



download.file("https://cdmaps.polisci.ucla.edu/shp/districts097.zip", 
              destfile = "districts097.zip" , mode='wb')
unzip("districts097.zip", exdir = ".")
file.remove("districts097.zip")
district097 <- st_read("districtShapes/districts097.shp")

download.file("https://cdmaps.polisci.ucla.edu/shp/districts098.zip", 
              destfile = "districts098.zip" , mode='wb')
unzip("districts098.zip", exdir = ".")
file.remove("districts098.zip")
district098 <- st_read("districtShapes/districts098.shp")


download.file("https://cdmaps.polisci.ucla.edu/shp/districts101.zip", 
              destfile = "districts101.zip" , mode='wb')
unzip("districts101.zip", exdir = ".")
file.remove("districts101.zip")
district101 <- st_read("districtShapes/districts101.shp")


download.file("https://cdmaps.polisci.ucla.edu/shp/districts102.zip", 
              destfile = "districts102.zip" , mode='wb')
unzip("districts102.zip", exdir = ".")
file.remove("districts102.zip")
district102 <- st_read("districtShapes/districts102.shp")

download.file("https://cdmaps.polisci.ucla.edu/shp/districts103.zip", 
              destfile = "districts103.zip" , mode='wb')
unzip("districts103.zip", exdir = ".")
file.remove("districts103.zip")
district103 <- st_read("districtShapes/districts103.shp")

download.file("https://cdmaps.polisci.ucla.edu/shp/districts106.zip", 
              destfile = "districts106.zip" , mode='wb')
unzip("districts106.zip", exdir = ".")
file.remove("districts106.zip")
district106 <- st_read("districtShapes/districts106.shp")


download.file("https://cdmaps.polisci.ucla.edu/shp/districts108.zip", 
              destfile = "districts108.zip" , mode='wb')
unzip("districts108.zip", exdir = ".")
file.remove("districts108.zip")
district108 <- st_read("districtShapes/districts108.shp")



download.file("https://cdmaps.polisci.ucla.edu/shp/districts111.zip", 
              destfile = "districts111.zip" , mode='wb')
unzip("districts111.zip", exdir = ".")
file.remove("districts111.zip")
district111 <- st_read("districtShapes/districts111.shp")


download.file("https://cdmaps.polisci.ucla.edu/shp/districts112.zip", 
              destfile = "districts112.zip" , mode='wb')
unzip("districts112.zip", exdir = ".")
file.remove("districts112.zip")
district112 <- st_read("districtShapes/districts112.shp")



download.file("https://cdmaps.polisci.ucla.edu/shp/districts106.zip", 
              destfile = "districts106.zip" , mode='wb')
unzip("districts106.zip", exdir = ".")
file.remove("districts106.zip")
district106 <- st_read("districtShapes/districts106.shp")


download.file("https://www2.census.gov/geo/tiger/TIGER2020/CD/tl_2020_us_cd116.zip", 
              destfile = "districts116.zip" , mode='wb')
unzip("districts116.zip", exdir = ".")
file.remove("districts116.zip")
district116 <- st_read("tl_2020_us_cd116.shp")


download.file("https://www2.census.gov/geo/tiger/TIGER2016/CD/tl_2016_us_cd115.zip", 
              destfile = "districts115.zip" , mode='wb')
unzip("districts115.zip", exdir = ".")
file.remove("districts115.zip")
district115 <- st_read("tl_2016_us_cd115.shp")


```
</details>

<div style="text-align: center;">
## Exploration of Vote Count Data 
</div>

##### Which states have gained and lost the most seats in the US House of Representatives between 1976 and 2022?

Firstly, I want to find out which states have gained and lost the most seats in the US House of Representatives between 1976 and 2022. To do this, I need to filter the House Seats data set to only show 1976 and 2022, then group it by year and state. Once I do this, I can find out how many distinct districts are in each state. For the purpose of this project, I will asign *one* seat per district in each state. Then, I can use these numbers to find the difference between the two years. Since many states actually had no change in seat numbers, I decided to exlude them from the data set and only show the states we are interested in. Thus, below is a bar graph that depicts either the gain or loss of House Seats from 1976 to 2022, per state. 

<details>
  <summary>**Click here to see how the data was manipulated**</summary>
```{r}


house_seats <- X1976_2022_house |>
  filter(year %in% c(1976, 2022)) |>
  group_by(year, state) |> 
  summarize(seats=n_distinct(district))


house_seats_spread <- house_seats |>
  pivot_wider(names_from = year, values_from = seats) |>
  mutate(difference = (`2022` - `1976`)) |>
  filter(difference != 0)


diff_seats <- house_seats_spread |>
  select(state, difference)

ggplot(diff_seats, aes(x = state, y = difference, fill = difference > 0)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  scale_fill_manual(values = c("tomato", "springgreen2")) +
  coord_flip() +
  labs(title = "Each State's Gain/Loss of Seats in the US House of Representatives from 1976 - 2022", x = "State", y = "Difference of Seats") +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),
        axis.text.y = element_text(size = 8),
        plot.margin = margin(3, 3, 3))

Difference_in_seats <- ggplot(diff_seats, aes(x = state, y = difference, fill = difference > 0)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  scale_fill_manual(values = c("tomato", "springgreen2")) +
  coord_flip() +
  labs(title = "Each State's Gain/Loss of Seats in the US House of Representatives from 1976 - 2022", x = "State", y = "Difference of Seats") +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),
        axis.text.y = element_text(size = 8),
        plot.margin = margin(3, 3, 3))



```
</details>

```{r}

print(Difference_in_seats)

```

Looking at this graph, we can see that Texas has *gained* the most seats and New York has *lost* the most seats since 1976. Notably, Pennsylvania, Michigan, Ohio, and Illinois all also lost over 5 seats, while California, Florida, and Arizona gained 5 or more seats. It is also interesting to see that *more* states lost seats than states that *gained* seats, with 19 states losing seats and 15 states gaining seats. 


##### Are there any elections in our data where the election would have had a different outcome if the “fusion” system was not used and candidates only received the votes their received from their “major party line” (Democrat or Republican) and not their total number of votes across all lines?

Before computing this, we should understand what ["The Fusion System"](https://protectdemocracy.org/work/fusion-voting-explained/) is. This system means that one candidate is allowed to appear on multiple "lines" on a ballot and their *total* votes are counted, rather than just appearing once. This gives this candidate an advantage, as they are practically running against themselves in other parties, but their *total votes* is counted against other candidates. 

Now, I want to know if there are any elections in our data set that would have had a different outcome had the "fusion system" not been used. To do this, I am going to evaluate our data set at two different points: the first being with each candidates total votes, and the second using only "major party lines," thus "DEMOCRAT" or "REPUBLICAN". Then, I will find the winner of each side, and see if they line up. If the do line up, then the candidate who won was the true winner of the election. However, if they do not, then the "fusion voting" is what helped this person win over their competitor. This can be seen in my code below. 

<details>
  <summary>**Click here to see how the data was manipulated**</summary>
```{r}

fusion_voting <- X1976_2022_house |>
  group_by(year, state, district, candidate) |>
  summarize(total_votes = sum(candidatevotes), .groups = 'drop') |>
  group_by(year, state, district) |>
  filter(total_votes == max(total_votes)) |>
  ungroup()

colnames(fusion_voting)[colnames(fusion_voting) == "total_votes"] <- "total_fusion_votes"


no_fusion_voting <- X1976_2022_house |>
  filter(party %in% c("REPUBLICAN", "DEMOCRAT")) |>
  group_by(year, state, district, candidate) |>
  summarize(total_votes = sum(candidatevotes), .groups = 'drop') |>
  group_by(year, state, district) |>
  filter(total_votes == max(total_votes)) |>
  ungroup()

house_voting <- left_join(fusion_voting, no_fusion_voting, by = (c("state","district")))


house_voting <- fusion_voting |>
  left_join(no_fusion_voting, by = c("year", "state", "district", "candidate")) |>
  mutate(difference = (`total_fusion_votes` - `total_votes`)) |>
  filter(difference != 0) |>
  arrange(desc(difference))


instances <- nrow(house_voting)



```
</details>


```{r}

print(instances)

```

Before showing the table, I want to note that there were **601** instances where this occurred! That is a lot of times that the fusion vote aided in a candidate's win! 

Below is a table that shows each of these instances. 


```{r}

library(DT)
datatable(house_voting) 

```

In this table, you can see the the difference in votes span from 61,938 to 559 votes over the 601 instances. 


##### Do presidential candidates tend to run ahead of or run behind congressional candidates in the same state? Does this trend differ over time? Does it differ across states or across parties? Are any presidents particularly more or less popular than their co-partisans?

<details>
  <summary>**Click here to see how the code was done**</summary>
```{r}

house_candidates2 <- X1976_2022_house |>
  filter(party %in% c("REPUBLICAN", "DEMOCRAT")) |>
  group_by(year, state, party) |>
  summarize(total_votes = sum(candidatevotes), .groups = 'drop') |>
  group_by(year, state, party)


president_candidates2 <- X1976_2020_president |>
  filter(party_detailed %in% c("REPUBLICAN", "DEMOCRAT")) |>
  group_by(year, state, party_detailed) |>
  summarize(total_votes = sum(candidatevotes), .groups = 'drop') |>
  group_by(year, state, party_detailed)

colnames(president_candidates2)[colnames(president_candidates2) == "party_detailed"] <- "party"

colnames(president_candidates2)[colnames(president_candidates2) == "total_votes"] <- "president_votes"

colnames(house_candidates2)[colnames(house_candidates2) == "total_votes"] <- "house_votes"

Vote_state_difference <- president_candidates2 |>
  inner_join(house_candidates2, by = c("year", "state", "party")) |>
  mutate(difference = (president_votes - house_votes))


```
</details>



```{r}

datatable(Vote_state_difference) 

```

Now, let's see if this trend differs overtime. To do this, I created a line graph to show the difference of votes between the President and the House, for both Republicans and Democrats. This can be seen below. 

<details>
  <summary>**Click here to see how the code was done**</summary>
```{r}

house_candidates <- X1976_2022_house |>
  filter(party %in% c("REPUBLICAN", "DEMOCRAT")) |>
  group_by(year, party) |>
  summarize(total_votes = sum(candidatevotes), .groups = 'drop') |>
  group_by(year, party)


president_candidates <- X1976_2020_president |>
  filter(party_detailed %in% c("REPUBLICAN", "DEMOCRAT")) |>
  group_by(year, party_detailed) |>
  summarize(total_votes = sum(candidatevotes), .groups = 'drop') |>
  group_by(year, party_detailed)


colnames(president_candidates)[colnames(president_candidates) == "party_detailed"] <- "party"

colnames(president_candidates)[colnames(president_candidates) == "total_votes"] <- "president_votes"

colnames(house_candidates)[colnames(house_candidates) == "total_votes"] <- "house_votes"

Vote_difference <- president_candidates |>
  inner_join(house_candidates, by = c("year", "party")) |>
  mutate(difference = (president_votes - house_votes))

Overtime <- ggplot(Vote_difference, aes (x = year, y = difference, color = party)) + 
  geom_point() +
  geom_line(linewidth = .5) + 
  scale_color_manual(values = c("DEMOCRAT" = "royalblue2", "REPUBLICAN" = "firebrick2")) +
  labs(title = "Difference Between Presidential and House Votes Per Year", x = "Year", y = "Difference of Votes (President - House)") +
  theme_minimal()

```
</details>

```{r}

print(Overtime)

```

Here, we can see that both parties has experience a large difference in votes. However, the Republican Party has tended to experience a higher support for their President over the House seats, while the Democratic Party has experienced both sides. Oddly enough, from about the 1990s - 2000s, the parties switched in their favor, with the House Republicans running more votes than the president and the Democrat President running more votes than the house. 


To automate zip file extraction. 

<details>
  <summary>**Click here to see how the data was downloaded into R**</summary>
```{r, eval=FALSE, echo=TRUE}

td <- tempdir(); 
zip_contents <- unzip("district095", 
                      exdir = td)
    
fname_shp <- zip_contents[grepl("shp$", zip_contents)]
district095 <- read_sf(fname_shp)


td <- tempdir(); 
zip_contents <- unzip("district106", 
                      exdir = td)
    
fname_shp <- zip_contents[grepl("shp$", zip_contents)]
district106 <- read_sf(fname_shp)



```
</details>


<div style="text-align: center;">
## Chloropleth Visualization
</div>

Now, I will make a Chloropleth Visualization of the 2000 Presidential Election Electoral College Results. 

<details>
  <summary>**Click here to see how the map was made**</summary>
```{r}

install.packages('plyr', repos = "http://cran.us.r-project.org")

options(repos = list(CRAN="http://cran.rstudio.com/"))

library(utils)
install.packages("sf")
library(sf)

library(sf)
s.sf <- st_read("districtShapes/districts106.shp")
head(s.sf, n=4)


president_2000 <- X1976_2020_president |>
  filter(year == '2000',
         candidate %in% c("BUSH, GEORGE W.", "GORE, AL")) |>
  group_by(state) |>
  summarize(
    highest_votes = max(candidatevotes),
    party = party_simplified[which.max(candidatevotes)]
  )


Shape_2000 <- s.sf |>
  mutate(STATENAME = toupper(trimws(STATENAME))) |>
  left_join(president_2000, join_by(STATENAME == state)) 
  

USA2000Map <- ggplot(Shape_2000, aes(geometry = geometry, fill = party),
       color = "black") +
  geom_sf() + 
  scale_fill_manual(values = c("REPUBLICAN" = "firebrick2", "DEMOCRAT" = "royalblue2")) +
  theme_minimal() +
  coord_sf(xlim = c(-180, -50), ylim = c(10,80), expand = FALSE) +
  labs(title = "2000 Presidential Election Electoral College Results", fill = "Winning Party") 


```
</details>

```{r}
print(USA2000Map)

```


<div style="text-align: center;">
## Advanced Chloropleth Visualization of Electoral College Results
</div>

Below is a faceted map of the presidential party winners per state from 1976 to 2020. 

<details>
  <summary>**Click here to see how the map was made**</summary>
```{r}

election_results <- X1976_2020_president |>
  filter(party_simplified %in% c("DEMOCRAT", "REPUBLICAN")) |>
  group_by(year, state) |>
  summarize(
    highest_votes = max(candidatevotes),
    party = party_simplified[which.max(candidatevotes)]
  )

state_2020 <- s.sf |>
  mutate(NAME = toupper(STATENAME))

election_outcomes <- left_join(state_2020, election_results, join_by("NAME" == "state"))


```
</details>

```{r}
election_outcomes |>
  st_shift_longitude() |>
  ggplot(aes(geometry = geometry,
             fill = party)) +
  geom_sf() +
  coord_sf(xlim = c(170, 300)) +
  scale_fill_manual(name = "Party", values = c("DEMOCRAT" = "royalblue2", "REPUBLICAN" = "firebrick2")) +
  theme_bw() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) +
  labs(title = "Presidential Election Outcomes, 1976-2020") +
  facet_wrap(~year)

```



<div style="text-align: center;">
## Comparing the Effects of the ECV Allocation Rules 
</div>

Though things have changed over time due to amendment, statue, and technology, the basic outline of allocation has remained the same: 


-  Each state gets R + 2 electoral college votes, where R is the number of Representatives that state has in the US House of Representatives. In this mini-project, you can use the number of districts in a state to determine the number of congressional representatives (one per district).
-  States can allocate those votes however they wish
-  The president is the candidate who receives a majority of electoral college votes

Notably, the Constitution sets no rules on how the electoral college votes for a particular state is allocated. In the past, states have: 


- Direct allocation of ECVs by state legislature (no vote)
- Allocation of all ECVs to winner of state-wide popular vote
- Allocation of all ECVs to winner of nation-wide popular vote 2
- Allocation of R ECVs to popular vote winner by congressional district + allocation of remaining 2 ECVs to the state-wide popular vote winner

To complete this fact check, we will compare the effects of all of the Electoral College Votes allocation rules. For this, we will assume that the District of Columbia has 3 Electoral College Votes. 

First, let's see who actually won each election throughout the years and how many electoral college votes they received to get this win.

<details>
  <summary>**Click here to see how the code was done**</summary>
```{r}

actual_results <- data.frame(
  year = c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016, 2020),
  president = c("CARTER, JIMMY", "REAGAN, RONALD", "REAGAN, RONALD", "BUSH, GEORGE H.W.",
                "CLINTON, BILL", "CLINTON, BILL", "BUSH, GEORGE W.", "BUSH, GEORGE W.",
                "OBAMA, BARACK H.", "OBAMA, BARACK H.", "TRUMP, DONALD J.", "BIDEN, JOSEPH R. JR"),
  party = c("DEMOCRAT", "REPUBLICAN", "REPUBLICAN", "REPUBLICAN", "DEMOCRAT", "DEMOCRAT",
            "REPUBLICAN", "REPUBLICAN", "DEMOCRAT", "DEMOCRAT", "REPUBLICAN", "DEMOCRAT"),
  Electoral_college_votes = c(297, 489, 525, 426, 370, 379, 271, 286, 365, 332, 304, 306))

```
</details>


```{r}
datatable(actual_results)

```

<div style="text-align: center;">
**Allocation of all ECVs to winner of state-wide popular vote**
</div>

A state-wide approach would be that all electoral college votes of each state goes to whoever has the popular vote within that state. 

<details>
  <summary>**Click here to see how the code was done**</summary>
```{r}

state_ecv_win <- X1976_2022_house |>
  group_by(year, state) |>
  summarize(housereps = n_distinct(district)) |>
  mutate(ecv = ifelse(state == "DISTRICT OF COLUMBIA", 3, housereps + 2)) |>
  select(year, state, ecv)

state_winner<- X1976_2020_president |>
    group_by(year, state, candidate) |>
    summarize(votes_total = sum(candidatevotes)) |>
    ungroup() |>
    group_by(year, state) |>
    slice_max(order_by = votes_total, n = 1, with_ties = FALSE) 

winner_takeall<- state_winner |>
  left_join(state_ecv_win, join_by(year, state))

country_winner <- winner_takeall |>
  group_by(year, candidate) |>
  summarize(ecv_total = sum(ecv)) |>
  slice_max(order_by = ecv_total, n = 1, with_ties = FALSE) |>
  ungroup()

```
</details>

```{r}
datatable(country_winner)
```

Using this method, we can see that some elections would have turned out differently than what happened. For example, Gerald Ford would have won over Jimmy Carter in 1976, George H. W. Bush would have won over Bill Clinton in 1992, Robert Dole would have won over Bill Clinton in 1996, John McCain would have won over Barack Obama in 2008, and Mitt Romney would have won over Barack Obama in 2012. That is **five** elections over the past 46 years that would have been swayed due to this type of voting system. 

I do not believe that this way of voting is fair, as it does not properly represent the voters of the minority party in each state. That is, if 51% of voters vote for Party A, while 49% vote for Party B, all of Party B's voices will not be heard. That is a large majority of people who are being misheard. This also affects the election more, as the states who have less residents, but a good amount of electoral college votes can sway the election in their favor. 

Thus, let's go to the next voting option. 

<div style="text-align: center;">
**Allocation of all ECVs to winner of nation-wide popular vote 2**
</div>

For the second option, this means that all Electoral College Votes are given to whoever wins the popular vote of the *whole* country. 


<details>
  <summary>**Click here to see how the code was done**</summary>
```{r}


state_winner2 <- X1976_2020_president |>
  group_by(year, candidate) |>
  summarize(votes_total = sum(candidatevotes)) |>
  ungroup() |>
  group_by(year) |>
  slice_max(order_by = votes_total, n = 1, with_ties = FALSE) 

winner_country_takeall<- state_winner2 |>
  left_join(state_ecv_win, join_by(year))

country_winner2 <- winner_country_takeall |>
  group_by(year, candidate) |>
  summarize(ecv_total = sum(ecv)) |>
  slice_max(order_by = ecv_total, n = 1, with_ties = FALSE) |>
  ungroup()

```
</details>


```{r}
datatable(country_winner2)
```


Using this method, there were only two instances where the winners here differ from the actually winners of each elections. The two scenarios are as follows: Al Gore would have won over George W. Bush in 2000 and Hillary Clinton would have won over Donald Trump in 2020. 

Though this voting process produces similar outcomes to the actual election, I believe it is unfair due to the same reasoning as the first voting process. That is, again, if 51% of voters vote for Party A, while 49% vote for Party B, all of Party B's voices will not be heard. That is a large majority of people who are being misheard. 

Let's go to the final method. 


<div style="text-align: center;">
**Allocation of R ECVs to popular vote winner by congressional district + allocation of remaining 2 ECVs to the state-wide popular vote winner**
</div>


<details>
  <summary>**Click here to see how the code was done**</summary>
```{r}


district_winners <- X1976_2022_house |>
  group_by(year, state, district) |>
  slice_max(order_by = candidatevotes, n = 1, with_ties = FALSE) |>
  ungroup() |>
  group_by(year, state, candidate, party) |>
  summarize(ecv_district = n(), .groups = "drop")


state_winners <- X1976_2022_house |>
  group_by(year, state, candidate, party) |>
  summarize(total_votes = sum(candidatevotes), .groups = "drop") |>
  group_by(year, state) |>
  slice_max(order_by =  total_votes, n = 1, with_ties = FALSE) |>
  mutate(at_large = 2)


combined <- district_winners |>
  left_join(state_winners, by = c("year", "state", "candidate", "party")) |>
  mutate(at_large = replace_na(at_large, 0)) |>
  mutate(total_ecv = ecv_district + at_large) |>
  select(-total_votes, -candidate)



final_method_winners <- combined |>
  left_join(X1976_2020_president, by = c("year", "state", "party" = "party_simplified")) |>
  select(year, state, candidate, total_ecv) |>
  group_by(year, candidate) |>
  summarize(total_ecv = sum(total_ecv)) |>
  slice_max(order_by = total_ecv, n = 1, with_ties = FALSE) |>
  filter(!is.na(candidate)) |>
  ungroup()

```
</details>


```{r}
datatable(final_method_winners)
```

Using this method, we can see *six* elections would have had different outcomes than what would have actually occurred. These elections are as follows: Jimmy Carter would have won over Ronald Reagan in 1980, Walter Mondale would have won over Ronald Reagan in 1984, Michael Dukakis would have won over George H. W. Bush in 1988, Robert Dole would have won over Bill Clinton in 1996, Mitt Romney would have won over Barrack Obama in 2012, and Donald Trump would have won over Joseph Biden in 2020. 

I do not believe this is fair, as it still gives the majority voters a competitive advantage in the voting process. Not only are they getting the majority of the votes from being the popular vote, but they are also getting two electoral college votes on top of that. Thus, I do not believe this is fair. 

<div style="text-align: center;">
**So What is the Best?**
</div>

I believe the most fair way to divide the Electoral College Votes up in each state is on a proportional scale. Thus, each party is being accurately represented and no one party's voice is being heard more than the other. 

***

##### Citations: 

- MIT Election Data and Science Lab, 2017, “U.S. House 1976–2022”, Harvard Dataverse, V13

- MIT Election Data and Science Lab, 2017, “U.S. President 1976–2020”, Harvard Dataverse, V8










