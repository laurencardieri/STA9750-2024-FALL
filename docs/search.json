[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Website",
    "section": "",
    "text": "My name is Lauren and I am 22 years old.\nI am currently a student in Baruch’s MS Business Analytics Program.\n\nMy Dogs!\nI have two dogs! Their names are:\n\nMacaroni\n\nMacaroni (Mack) is technically my brother’s dog, but we babysit him while he’s at work.\nHe is a Golden Retreiver and is 2 years old!\n\n\nRusty\n\nRusty is extremely loving and the smartest dog I have ever met.\nHe is a Pitbull/Lab mix and is 13 years old (we think, he’s a rescue)!"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "This project was taken as inspiration from a YouTuber City Nerd, who created a video about the “10 Transit Services That Do Huge Numbers at the Farebox”. Farebox Recovery is the fraction of revenues raised from fares instead of taxes.\nFor this project, we will use data from the National Transit Database as our primary source. The following tables/reports will be used:\n\nThe 2022 Fare Revenue table, in which we will mostly explore revenue.\nThe lastest Monthly Ridership tables, in which we will mostly explore the Unlinked Passenger Trips (UPT) and Vehicle Revenue Miles (VRM).\nThe 2022 Operating Expenses reports, in which we will mostly explore expenses.\n\nWe will use the 2022 verson of all reports, as up-to-date data and newer reports are often uploaded on a lag.\n\n\n\nFirst, we must download, clean, and join the tables.\nUnfortunately, the code that allowed the immediate download of the data sets did not work for me. So instead, I had to download the data and import it into R, which is seen in my code below.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\nlibrary(readr)\n\nFARES &lt;- read_excel(\"Miniproject001/2022 Fare Revenue (1).xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`) |&gt;\n  group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`\n           `Agency Name`,  # These are direct operated and sub-contracted \n           `Mode`) |&gt;      # of the same transit modality\n  # Not a big effect in most munis (significant DO\n  # tends to get rid of sub-contractors), but we'll sum\n  # to unify different passenger experiences\n  summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency Name'. You can override\nusing the `.groups` argument.\n\nEXPENSES &lt;- read_csv(\"Miniproject001/2022_NTD_Annual_Data_-_Operating_Expenses__by_Function__20231102.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nRows: 3744 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (9): Agency, City, State, Organization Type, Reporter Type, UZA Name, M...\ndbl (13): NTD ID, Report Year, UACE Code, Primary UZA Population, Agency VOM...\nlgl  (7): Vehicle Operations Questionable, Vehicle Maintenance Questionable,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n`summarise()` has grouped output by 'NTD ID'. You can override using the `.groups` argument.\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\nNow, we must extract the monthly transit numbers. My computer struggled to read the whole file for ridership, so I split it into two respective files, one for UPT and one for VRM. This is seen in my code below.\n\nTRIPS &lt;- read_excel(\"Miniproject001/Ridership_UPT.xlsx\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"UPT\") |&gt;\n  drop_na() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\n\nMILES &lt;- read_excel(\"Miniproject001/Ridership_VRN.xlsx\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"VRM\") |&gt;\n  drop_na() |&gt;\n  group_by(`NTD ID`, `Agency`, `UZA Name`, \n           `Mode`, `3 Mode`, month) |&gt;\n  summarize(VRM = sum(VRM)) |&gt;\n  ungroup() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'UZA Name', 'Mode', '3\nMode'. You can override using the `.groups` argument.\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`))\n\nJoining with `by = join_by(`NTD ID`, Agency, `UZA Name`, Mode, `3 Mode`,\nmonth)`\n\n\nNow, this creates the table as follows:\n\nif(!require(\"DT\")) install.packages(\"DT\")\n\nLoading required package: DT\n\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()\n\n\n\n\n\n\n\n\nHere, I decided to rename three of the columns in my table, one to remove spaces so it is easier to manipulate in code, and the other to have more common names for easier understanding. Thus, I wanted:\n\n“UZA Name” to become “Metro_Area”\n“UPT” to become “Unlinked_Passenger_Trips”\n“VRM” to become “Vehicle Revenue Miles”\n\nSo, I did this with the following code:\n\ncolnames(USAGE)[colnames(USAGE) == \"UZA Name\"] &lt;- \"Metro_Area\"\ncolnames(USAGE)[colnames(USAGE) == \"UPT\"] &lt;- \"Unlinked_Passenger_Trips\"\ncolnames(USAGE)[colnames(USAGE) == \"VRM\"] &lt;- \"Vehicle_Revenue_Miles\"\n\nAnd then I reloaded my table to see if the columns changed/looked good. They did!\n\nlibrary(DT)\n\nsample_n(USAGE, 1) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()\n\n\n\n\n\n\n\n\nFirst, I needed to know what the unique codes were used in the Mode column in our data set. To do this, I ran the following command, which produced the following 18 codes:\n\ndistinct(USAGE, Mode)\n\n# A tibble: 18 × 1\n   Mode \n   &lt;chr&gt;\n 1 DR   \n 2 FB   \n 3 MB   \n 4 SR   \n 5 TB   \n 6 VP   \n 7 CB   \n 8 RB   \n 9 LR   \n10 YR   \n11 MG   \n12 CR   \n13 AR   \n14 TR   \n15 HR   \n16 IP   \n17 PB   \n18 CC   \n\n\nUsing the Glossary on the National Transit Database website, I forced search each of these codes to find their corresponding name. Then, I recoded my table to display these names.\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))\n\nThus, my cleaned-up table became:\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()\n\n\n\n\n\n\n\n\n\nWhat transit agency had the most total VRM in our data set?\n\n\ntotal_vrm_agency &lt;- USAGE |&gt; \n  group_by(`Agency`) |&gt; \n  summarize(VRM = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt;\n  arrange(desc(VRM))\n  tvrm &lt;- total_vrm_agency |&gt;\n    slice_max(VRM, n = 1)\n  print(tvrm)\n\n# A tibble: 1 × 2\n  Agency                            VRM\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 MTA New York City Transit 10832855350\n\n\nThus, the transit agency that had the most total VRM in our data set was MTA New York City Transit, with a Vehicle Revenue Miles of 10832855350. This makes sense, as public transit easily spans the entirety of New York City, whether it be the subway, buses, the ferry, or more. Since public transit is prevalent in our lives as New Yorkers, with many not even owning their own vehicle and solely relying on public transit, it is understandable that NYC is top of the list.\n\nWhat transit mode had the most total VRM in our data set?\n\n\n  total_vrm_mode &lt;- USAGE |&gt; \n    group_by(`Mode`) |&gt; \n    summarize(M = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt;\n    arrange(desc(M))\n    topmode &lt;- total_vrm_mode |&gt;\n      slice_max(M, n = 1)\n    print(topmode)\n\n# A tibble: 1 × 2\n  Mode            M\n  &lt;chr&gt;       &lt;dbl&gt;\n1 Bus   49444494088\n\n\nThe transit mode that had the most total VRM in our data set was the BUS, with a Vehicle Revenue Miles of 49444494088.\n\nHow many trips were taken on the NYC subway (Heavy Rail) in May 2024?\n\n\n    May24Subway &lt;- USAGE |&gt;\n      filter(Mode == \"Heavy Rail\", month &gt;= \"2024-05-01\", month &lt;= \"2024-05-31\") |&gt;\n      summarize(may_sub = sum(Unlinked_Passenger_Trips, na.rm = TRUE))\n    \n    print(May24Subway)\n\n# A tibble: 1 × 1\n    may_sub\n      &lt;dbl&gt;\n1 237383777\n\n\nSo, in May 2024, 237383777 unlinked passenger trips were taken on the NYC subway (Heavy Rail). Again, I believe that this checks out, especially with the way many New Yorkers rely on the subway to get around Manhatten during the work day.\n\nHow much did NYC subway ridership fall between April 2019 and April 2020?\n\n\n  april_19_to_20 &lt;- USAGE |&gt;\n      filter(Mode == \"Heavy Rail\", \n             (month &gt;= \"2019-04-01\" & month &lt;= \"2019-04-30\") |\n             (month &gt;= \"2020-04-01\" & month &lt;= \"2020-04-30\"))|&gt;\n      group_by(month) |&gt;\n      summarize(aprupt = sum(Unlinked_Passenger_Trips, na.rm = TRUE)) |&gt;\n      summarize(april_difference = \n            sum(aprupt[month &gt;= \"2020-04-01\" & month &lt;= \"2020-04-30\"]) - \n            sum(aprupt[month &gt;= \"2019-04-01\" & month &lt;= \"2019-04-30\"]))\n    \n    print(april_19_to_20)\n\n# A tibble: 1 × 1\n  april_difference\n             &lt;dbl&gt;\n1       -296416858\n\n\nHere, we can see that 296416858 less riders used the NYC Subway in April 2020 than April 2019. This makes a lot of sense, as April 2020 was the true start of lock down we faced because of the Covid-19 Pandemic. Whether riders were terrified to leave their homes in fear of contracting the virus or they were listening to the mandate to stay inside unless it is for an emergency, it is not a shock that the MTA had almost 300 million less riders in comparison.\nTo further prove this point, let’s consider the same comparison, but for May 2019 and May 2020.\n\n  may_19_to_20 &lt;- USAGE |&gt;\n      filter(Mode == \"Heavy Rail\", \n             (month &gt;= \"2019-05-01\" & month &lt;= \"2019-05-31\") |\n             (month &gt;= \"2020-05-01\" & month &lt;= \"2020-05-31\"))|&gt;\n      group_by(month) |&gt;\n      summarize(mayupt = sum(Unlinked_Passenger_Trips, na.rm = TRUE)) |&gt;\n      summarize(may_difference = \n            sum(mayupt[month &gt;= \"2020-05-01\" & month &lt;= \"2020-05-31\"]) - \n            sum(mayupt[month &gt;= \"2019-05-01\" & month &lt;= \"2019-05-31\"]))\n    \n    print(may_19_to_20)\n\n# A tibble: 1 × 1\n  may_difference\n           &lt;dbl&gt;\n1     -295050652\n\n\nThe month of May also experienced close to 300 million less riders in May 2020 than May 2019. I am sure if we were to investigate the following months as well, we would come to a similar conclusion. It is truly interesting to see the major impact that the pandemic caused in such a short period of time!\n\n\n\n\nWhat Metro Area has the most total amount of Unlinked Passenger Trips? Do they also have the most total Vehicle Revenue Miles?\n\n\n    Total_UPT &lt;- USAGE |&gt; \n    group_by(`Metro_Area`) |&gt; \n    summarize(most_trips = sum(`Unlinked_Passenger_Trips`, na.rm = TRUE)) |&gt;\n    arrange(desc(most_trips))\n  topupt &lt;- Total_UPT |&gt;\n    slice_max(most_trips, n = 1)\nprint(topupt)\n\n# A tibble: 1 × 2\n  Metro_Area                             most_trips\n  &lt;chr&gt;                                       &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ 84020935224\n\nTotal_VRM_MA &lt;- USAGE |&gt; \n  group_by(`Metro_Area`) |&gt; \n  summarize(most_miles = sum(`Vehicle_Revenue_Miles`, na.rm = TRUE)) |&gt;\n  arrange(desc(most_miles))\ntop_vrm_ma &lt;- Total_VRM_MA |&gt;\n  slice_max(most_miles, n = 1)\nprint(top_vrm_ma)\n\n# A tibble: 1 × 2\n  Metro_Area                             most_miles\n  &lt;chr&gt;                                       &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ 21190345637\n\n\nThe Metro Area that had the most total amount of Unlinked Passenger Trips was New York–Jersey City–Newark, NY–NJ, with 84020935224 trips. This metro area also has the most total Vehicle Revenue Miles, with 21190345637 miles. It is interesting to see that this metro area is dominant on both lists, especially with the NYC MTA also leading other lists prior.\n\nWhat Date had the most total amount of Vehicle Revenue Miles? What date had the least?\n\n\n  Total_date_T &lt;- USAGE |&gt; \n  group_by(`month`) |&gt; \n  summarize(most_date = sum(`Vehicle_Revenue_Miles`, na.rm = TRUE)) |&gt;\n  arrange(desc(most_date))\ntopdate &lt;- Total_date_T |&gt;\n  slice_max(most_date, n = 1)\nprint(topdate)\n\n# A tibble: 1 × 2\n  month      most_date\n  &lt;date&gt;         &lt;dbl&gt;\n1 2019-10-01 449683378\n\nTotal_date_L &lt;- USAGE |&gt; \n  group_by(`month`) |&gt; \n  summarize(least_date = sum(`Vehicle_Revenue_Miles`, na.rm = TRUE)) |&gt;\n  arrange(desc(least_date))\nlowdate &lt;- Total_date_L |&gt;\n  slice_min(least_date, n = 1)\nprint(lowdate)\n\n# A tibble: 1 × 2\n  month      least_date\n  &lt;date&gt;          &lt;dbl&gt;\n1 2020-04-01  255564356\n\n\nThe date with the most total Vehicle Revenue Miles is October 1, 2019. The date with the least is April 1, 2020. Though I am unsure why October 1, 2019 was a popular date to travel, as there was no holidays or world events happen that day, it makes sense why April 1, 2020 was the lowest, due to COVID.\n\nWhich Metro Area contributed the most to the busiest day of the year in regard to Unlinked Passenger Trips? ? Which contributed the least?\n\n\n Transport_Metro &lt;- USAGE |&gt;\n  filter(month == \"2019-10-1\") |&gt;\n  group_by(Metro_Area) |&gt;\n  summarize(most_metro = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) \n  topmetro &lt;- Transport_Metro |&gt; \n  slice_max(most_metro, n=1)\nprint(topmetro)\n\n# A tibble: 1 × 2\n  Metro_Area                            most_metro\n  &lt;chr&gt;                                      &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ   87400676\n\ntopmetro &lt;- Transport_Metro |&gt; \n  slice_min(most_metro, n=1)\nprint(topmetro) \n\n# A tibble: 1 × 2\n  Metro_Area  most_metro\n  &lt;chr&gt;            &lt;dbl&gt;\n1 Decatur, AL      25944\n\n\nOn the busiest day of the year for Vehicle Revenue Miles, New York–Jersey City–Newark, NY–NJ contributed the most with 87400676 miles. However, Decatur, AL contributed the least, with only 25944 miles. The New York–Jersey City–Newark, NY–NJ area providing the most to this list is not shocking, as it is also the leader on the list for total VRM.\n\n\n\nNow, we will create a new table from USAGE that also has annual total UPT and VRM for 2022.\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(year(month) == 2022) |&gt;\n  group_by(`NTD ID`, Agency, Metro_Area, Mode, Unlinked_Passenger_Trips, Vehicle_Revenue_Miles) |&gt;\n  summarize(UPT = sum(Unlinked_Passenger_Trips, na.rm = TRUE),\n           VRM = sum(Vehicle_Revenue_Miles, na.rm = TRUE)\n  ) |&gt; \n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'Metro_Area', 'Mode',\n'Unlinked_Passenger_Trips'. You can override using the `.groups` argument.\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n                                  FINANCIALS,\n                                  join_by(`NTD ID`, Mode)) |&gt;\n  drop_na()\n\nWhen I attempted to run the given code the first time, I discovered that the tables were not joining together with all of their values. I quickly realized that this was because the Modes in the Financial table was still known as their short names. For example, the “Heavy Rail” was still referred to as “HR”. Thus, I ran the same code that we did on the USAGE table earlier to manipulate these codes to reflect their proper names. After this, the table formed with no issue.\n\nsample_n(USAGE_AND_FINANCIALS, 1000) |&gt; \n    DT::datatable()\n\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) had the most UPT in 2022?\n\n\nMTSUPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(mosttsupt = sum(UPT, na.rm = TRUE)) |&gt;\n  arrange(desc(mosttsupt))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(MTSUPT)\n\n# A tibble: 1,129 × 3\n# Groups:   Agency [525]\n   Agency                                                   Mode       mosttsupt\n   &lt;chr&gt;                                                    &lt;chr&gt;          &lt;dbl&gt;\n 1 MTA New York City Transit                                Heavy Rail    1.79e9\n 2 MTA New York City Transit                                Bus           4.59e8\n 3 Los Angeles County Metropolitan Transportation Authority Bus           1.94e8\n 4 Chicago Transit Authority                                Bus           1.40e8\n 5 New Jersey Transit Corporation                           Bus           1.13e8\n 6 Chicago Transit Authority                                Heavy Rail    1.04e8\n 7 MTA Bus Company                                          Bus           1.00e8\n 8 Washington Metropolitan Area Transit Authority           Heavy Rail    9.84e7\n 9 Southeastern Pennsylvania Transportation Authority       Bus           9.66e7\n10 Washington Metropolitan Area Transit Authority           Bus           8.99e7\n# ℹ 1,119 more rows\n\n\nThe transit system, agency and mode, that had the most UPT in 2022 was the MTA New York City Transit with their Heavy Rail, with a total UPT of 1793073801. This number is way larger than the following on the list, which interestly enough also belongs to the MTA New York City transit and their Bus system.\n\nWhich transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\n\n\ncolnames(USAGE_AND_FINANCIALS)[colnames(USAGE_AND_FINANCIALS) == \"Total Fares\"] &lt;- \"Total_Fares\"\n\nhighest_farebox &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter( UPT &gt;= 400000) |&gt;\n  mutate(farebox_rate = Total_Fares/Expenses) |&gt; \n  group_by(Agency, Mode) |&gt;\n  summarize(highest_ratio = max (farebox_rate)) |&gt;\n  arrange(desc(highest_ratio))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(highest_farebox)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                    Mode  highest_ratio\n   &lt;chr&gt;                                                     &lt;chr&gt;         &lt;dbl&gt;\n 1 Anaheim Transportation Network                            Bus           0.865\n 2 City of Gainesville, FL                                   Bus           0.548\n 3 MTA New York City Transit                                 Heav…         0.435\n 4 Massachusetts Bay Transportation Authority                Heav…         0.375\n 5 Woods Hole, Martha's Vineyard and Nantucket Steamship Au… Ferr…         0.335\n 6 Metro-North Commuter Railroad Company, dba: MTA Metro-No… Comm…         0.331\n 7 Centre Area Transportation Authority                      Bus           0.324\n 8 MTA Long Island Rail Road                                 Comm…         0.286\n 9 Southeastern Pennsylvania Transportation Authority        Heav…         0.253\n10 Regional Transportation Commission of Southern Nevada     Bus           0.252\n# ℹ 136 more rows\n\n\nHere, we can clearly see that the transit system with the highest farebox recovery is Anaheim Transportation Network with their bus transportation. The fairbox recovery for each transit system is found by dividing their Total Fares by their Expenses. Interestingly enough, Anaheim Transportation Network and their buses have a ratio of .865, which is about a 57% greater than the second place spot, which is the City of Gainesville, FL with their buses!\n\nWhich transit system (agency and mode) has the lowest expenses per UPT?\n\n\nlow_expense_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter( UPT &gt;= 400000) |&gt;\n  mutate(exp_p_upt = Expenses/UPT) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(lowest_exp_p_upt = min(exp_p_upt)) |&gt;\n  arrange(lowest_exp_p_upt)\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(low_expense_UPT)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                 Mode  lowest_exp_p_upt\n   &lt;chr&gt;                                                  &lt;chr&gt;            &lt;dbl&gt;\n 1 Anaheim Transportation Network                         Bus               12.8\n 2 University of Georgia                                  Bus               14.9\n 3 University of Michigan Parking and Transportation Ser… Bus               16.2\n 4 Town of Blacksburg                                     Bus               17.5\n 5 Ames Transit Agency                                    Bus               21.5\n 6 Centre Area Transportation Authority                   Bus               23.5\n 7 MTA New York City Transit                              Heav…             31.1\n 8 Greater Lafayette Public Transportation Corporation    Bus               31.5\n 9 San Diego Metropolitan Transit System                  Ligh…             31.6\n10 Champaign-Urbana Mass Transit District                 Bus               39.8\n# ℹ 136 more rows\n\n\nSimilar to the last inquiry , the transit system that has the lowest expenses per UPT is Anaheim Transportation Network with their bus transportation. Their ratio of expenses per UPT is 12.8, which is drastically less than the highest. The highest expense per UPT is Northeast Illinois Regional Commuter Railroad Corporation and their Cable Cars, with a ratio of 600, which is an extreme difference between the two.\n\nWhich transit system (agency and mode) has the highest total fares per UPT?\n\n\nhigh_fare_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 400000) |&gt;\n  mutate(totalfares_p_upt = (Total_Fares/UPT)) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(high_fare_p_upt = max(totalfares_p_upt)) |&gt;\n  arrange(desc(high_fare_p_upt))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(high_fare_UPT)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                  Mode  high_fare_p_upt\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;dbl&gt;\n 1 New Jersey Transit Corporation                          Bus             536. \n 2 Northeast Illinois Regional Commuter Railroad Corporat… Comm…           265. \n 3 Metro-North Commuter Railroad Company, dba: MTA Metro-… Comm…           161. \n 4 New Jersey Transit Corporation                          Comm…           119. \n 5 MTA New York City Transit                               Comm…           112. \n 6 Massachusetts Bay Transportation Authority              Bus             107. \n 7 Massachusetts Bay Transportation Authority              Comm…            84.4\n 8 Woods Hole, Martha's Vineyard and Nantucket Steamship … Ferr…            78.0\n 9 MTA Long Island Rail Road                               Comm…            73.9\n10 Peninsula Corridor Joint Powers Board                   Comm…            67.5\n# ℹ 136 more rows\n\n\nThe transit system with the highest total fares per UPT is New Jersey Transit Corporation and their buses, with a total fare of 536 to one Unlinked Passenger Trip. This is more than double the second place spot, which goes to Northeast Illinois Regional Commuter Railroad Corporation and their Commuter Bus, with a total fare of 265 to one Unlinked Passenger Trip.\n\nWhich transit system (agency and mode) has the lowest expenses per VRM?\n\nInterestingly enough, I had to change my “Expenses” column name to “expense” for my code to recognize the column instead of the table we established prior, hence the reasoning for that code below.\n\ncolnames(USAGE_AND_FINANCIALS)[colnames(USAGE_AND_FINANCIALS) == \"Expenses\"] &lt;- \"expense\"\n\nlow_exp_vrm&lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 400000) |&gt;\n  mutate(exp_p_vrm = (expense/VRM)) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(low_exp_p_vrm = min(exp_p_vrm)) |&gt; \n  arrange(low_exp_p_vrm) \n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(low_exp_vrm)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                              Mode       low_exp_p_vrm\n   &lt;chr&gt;                                               &lt;chr&gt;              &lt;dbl&gt;\n 1 Interurban Transit Partnership                      Bus                 77.2\n 2 City of El Paso                                     Bus                 85.8\n 3 Des Moines Area Regional Transit Authority          Bus                 86.3\n 4 Central Florida Regional Transportation Authority   Bus                 87.5\n 5 San Francisco Bay Area Rapid Transit District       Heavy Rail          88.8\n 6 Transportation District Commission of Hampton Roads Bus                 88.9\n 7 City of Gainesville, FL                             Bus                 90.1\n 8 Greater Lafayette Public Transportation Corporation Bus                 90.5\n 9 Ames Transit Agency                                 Bus                 92.0\n10 Delaware Transit Corporation                        Bus                 92.4\n# ℹ 136 more rows\n\n\nThe transit system with the lowest expenses per Vehicle Revenue Miles was Interurban Transit Partnership and their Bus transportation, with an expense of 77.2 per Vehicle Revenue Mile. This is far cheaper than the leader of this category, which is the New York City Department of Transportation and their Ferryboat, with an expense of 771 per vehicle revenue mile. Interestingly enough, out of the ten highest expenses on the list, nine of the most expensive Modes of transportation is the Ferryboat, with only the Cable Car in San Francisco coming in at fourth. This shows that a Ferryboat is most-likely the most expensive transportation mode for transit agencies to run in comparison to its vehicle revenue miles.\n\nWhich transit system (agency and mode) has the highest total fares per VRM?\n\n\nhigh_fare_VRM &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 400000) |&gt;\n  mutate(totalfares_p_vrm = (Total_Fares/VRM)) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(high_fare_p_vrm = max(totalfares_p_vrm)) |&gt;\n  arrange(desc(high_fare_p_vrm))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(high_fare_VRM)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                  Mode  high_fare_p_vrm\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;dbl&gt;\n 1 Washington State Ferries                                Ferr…          1120. \n 2 Woods Hole, Martha's Vineyard and Nantucket Steamship … Ferr…           829. \n 3 New York City Economic Development Corporation          Ferr…           188. \n 4 Anaheim Transportation Network                          Bus             170. \n 5 Massachusetts Bay Transportation Authority              Ligh…           131. \n 6 Port Authority Trans-Hudson Corporation                 Heav…           119. \n 7 Massachusetts Bay Transportation Authority              Heav…           101. \n 8 MTA Long Island Rail Road                               Comm…            98.6\n 9 Metro-North Commuter Railroad Company, dba: MTA Metro-… Comm…            94.4\n10 MTA New York City Transit                               Heav…            91.5\n# ℹ 136 more rows\n\n\nThe transit system with the highest total fares per vehicle revenue miles is Washington State Ferries, with a ratio of 1120 total fares to one vehicle revenue mile. An interesting correlation to the last inquiry is that the top three highest total fares per VRM belong to ferryboats. Furthermore, the highest value on the list is almost 500% greater than the third value, which is 188, and that percentage only grows as that list goes further down.\n\n\n\nIn regard to what transit system in the country is the most effective, it depends on which data points you use to weigh your opinion. If you are considering which system has the highest values in URM and UPT, meaning it is the most frequently used, the answer would be the major transit system of NYC’s MTA Transit. Not only is its heavy rail system extremely prevalent in these numbers, which makes sense since numerous rails span the lengths of New York City and are used daily by many, but the NYC MTA Bus also holds rank compared to others.\nHowever, if you are considering which transit system is the most cost effective, it would have to be the Anaheim Transportation Network. Since a high farebox recovery ratio indicates that a transit system is profitable, Anaheim Transportation Network bus’ numbers alone show that this system is highly more profitable than the rest. This agency also leads margin of lowest expenses per unlinked passenger trip, which shows that not only is this system great at making money, it also great at retaining it and not spending the majority of it on expenses. However, while this is great from a business standpoint, as a passenger this transportation agency ranks high on the total fares per vehicle revenue mile scale, as it is in 4th place. This means that this transportation is fairly expensive to ride compared to the others.\nIn my opinion, I believe that the MTA New York City Transit is the most effective in the country, due to the enormous scale it can run on at a moderate price compared to other agencies."
  },
  {
    "objectID": "mp01.html#this-code-needs-to-be-modified",
    "href": "mp01.html#this-code-needs-to-be-modified",
    "title": "STA 9750 2024 Submission Material",
    "section": "This code needs to be modified",
    "text": "This code needs to be modified\nUSAGE &lt;- USAGE |&gt; mutate(Mode=case_when( Mode == “HR” ~ “Heavy Rail”, Mode == “DR” ~ “Demand Response”, Mode == “FB” ~ “Ferryboat”, Mode == “MB” ~ “Bus”, Mode == “SR” ~ “Streetcar Rail”, Mode == “TB” ~ “Trolleybus”, Mode == “VP” ~ “Vanpool”, Mode == “CB” ~ “Commuter Bus”, Mode == “RB” ~ “Bus Rapid Transit”, Mode == “LR” ~ “Light Rail”, Mode == “YR” ~ “Hybrid Rail”, Mode == “MG” ~ “Monorail and Automated Guideway”, Mode == “CR” ~ “Commuter Rail”, Mode == “AR” ~ “Alaska Railroad”, Mode == “TR” ~ “Aerial Tramways”, Mode == “IP” ~ “Inclined Plane”, Mode == “PB” ~ “Publico”, Mode == “CC” ~ “Cable Car”, TRUE ~ “Unknown”))\n##changing column names (optional) colnames(USAGE)[colnames(USAGE) == “UPT”] &lt;- “Unlinked_Passenger_Trips” colnames(USAGE)[colnames(USAGE) == “VRM”] &lt;- “Vehicle_Revenue_Miles”\nsample_n(USAGE, 1000) |&gt; mutate(month=as.character(month)) |&gt; DT::datatable()\n#Task 3"
  },
  {
    "objectID": "mp01.html#what-transit-agency-had-the-most-total-vrm-in-our-data-set",
    "href": "mp01.html#what-transit-agency-had-the-most-total-vrm-in-our-data-set",
    "title": "STA 9750 2024 Submission Material",
    "section": "1. What transit agency had the most total VRM in our data set?",
    "text": "1. What transit agency had the most total VRM in our data set?\ntotal_vrm_agency &lt;- USAGE |&gt; group_by(Agency) |&gt; summarize(VRM = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt; arrange(desc(VRM)) view(total_vrm_agency)\n###The transit agency that had the most total VRM in our data set was MTA New York City Transit, with a Vehicle Revenue Miles of 10832855350."
  },
  {
    "objectID": "mp01.html#what-transit-mode-had-the-most-total-vrm-in-our-data-set",
    "href": "mp01.html#what-transit-mode-had-the-most-total-vrm-in-our-data-set",
    "title": "STA 9750 2024 Submission Material",
    "section": "2. What transit mode had the most total VRM in our data set?",
    "text": "2. What transit mode had the most total VRM in our data set?\ntotal_vrm_mode &lt;- USAGE |&gt; group_by(Mode) |&gt; summarize(M = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt; arrange(desc(M)) topmode &lt;- total_vrm_mode |&gt; slice_max(M, n = 1) print(topmode)\n\nThe tranist mode that had the most total VRM in our data set was the BUS, with a Vehicle Revenue Miles of 49444494088."
  },
  {
    "objectID": "mp01.html#how-many-trips-were-taken-on-the-nyc-subway-heavy-rail-in-may-2024",
    "href": "mp01.html#how-many-trips-were-taken-on-the-nyc-subway-heavy-rail-in-may-2024",
    "title": "STA 9750 2024 Submission Material",
    "section": "3. How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?",
    "text": "3. How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\nNYC_Subway &lt;- USAGE |&gt; month &lt;- as.Date(month)\nfilter(Mode == “Heavy Rail”, month == (“2024-05-01”) & (“2024-05-31”))\nfilter(month %in% c(2024-05-01,2024-05-31))"
  },
  {
    "objectID": "mp01.html#how-much-did-nyc-subway-ridership-fall-between-april-2019-and-april-2020",
    "href": "mp01.html#how-much-did-nyc-subway-ridership-fall-between-april-2019-and-april-2020",
    "title": "STA 9750 2024 Submission Material",
    "section": "5. How much did NYC subway ridership fall between April 2019 and April 2020?",
    "text": "5. How much did NYC subway ridership fall between April 2019 and April 2020?\napril_19 &lt;- USAGE$month |&gt; filter(month &gt;= as.Date(“2019-04-01”) & month &lt;= as.Date(“2029-04-30”))\nUSAGE\\(month &lt;- as.Date(USAGE\\)month)\napril_19 &lt;- USAGE$month |&gt; filter(Date &gt;= as.Date(“2019-04-01”) & Date &lt;= as.Date(“2029-04-30”))\n#Task 4"
  },
  {
    "objectID": "mp01.html#what-metro-area-has-the-most-total-amount-of-unlinked-passenger-trips-do-they-also-have-the-most-total-vehicle-revenue-miles",
    "href": "mp01.html#what-metro-area-has-the-most-total-amount-of-unlinked-passenger-trips-do-they-also-have-the-most-total-vehicle-revenue-miles",
    "title": "STA 9750 2024 Submission Material",
    "section": "1. What Metro Area has the most total amount of Unlinked Passenger Trips? Do they also have the most total Vehicle Revenue Miles?",
    "text": "1. What Metro Area has the most total amount of Unlinked Passenger Trips? Do they also have the most total Vehicle Revenue Miles?\nTotal_UPT &lt;- USAGE |&gt; group_by(Metro_Area) |&gt; summarize(most_trips = sum(Unlinked_Passenger_Trips, na.rm = TRUE)) |&gt; arrange(desc(most_trips)) topupt &lt;- Total_UPT |&gt; slice_max(most_trips, n = 1) print(topupt)\nTotal_VRM_MA &lt;- USAGE |&gt; group_by(Metro_Area) |&gt; summarize(most_miles = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt; arrange(desc(most_miles)) top_vrm_ma &lt;- Total_VRM_MA |&gt; slice_max(most_miles, n = 1) print(top_vrm_ma)\n\nThe Metro Area that had the most total amount of Unlinked Passenger Trips was New York–Jersey City–Newwark, NY–NJ, with 84020935224 trips.\n\n\nThis metro area also has the most total Vehicle Revenue Miles, with 21190345637 miles."
  },
  {
    "objectID": "mp01.html#what-date-had-the-most-total-amount-of-vehicle-revenue-miles-what-date-has-the-least",
    "href": "mp01.html#what-date-had-the-most-total-amount-of-vehicle-revenue-miles-what-date-has-the-least",
    "title": "STA 9750 2024 Submission Material",
    "section": "2. What Date had the most total amount of Vehicle Revenue Miles? What date has the least?",
    "text": "2. What Date had the most total amount of Vehicle Revenue Miles? What date has the least?\nTotal_date_T &lt;- USAGE |&gt; group_by(month) |&gt; summarize(most_date = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt; arrange(desc(most_date)) topdate &lt;- Total_date_T |&gt; slice_max(most_date, n = 1) print(topdate)\nTotal_date_L &lt;- USAGE |&gt; group_by(month) |&gt; summarize(least_date = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt; arrange(desc(least_date)) lowdate &lt;- Total_date_L |&gt; slice_min(least_date, n = 1) print(lowdate)\n\nThe date with the most total Vehicle Revenue Miles is October 1, 2019. The date with the least is April 1, 2020."
  },
  {
    "objectID": "mp01.html#which-metro-area-contributed-the-most-to-the-busiest-day-of-the-year-which-contributed-the-least",
    "href": "mp01.html#which-metro-area-contributed-the-most-to-the-busiest-day-of-the-year-which-contributed-the-least",
    "title": "STA 9750 2024 Submission Material",
    "section": "3. Which Metro Area contributed the most to the busiest day of the year? Which contributed the least?",
    "text": "3. Which Metro Area contributed the most to the busiest day of the year? Which contributed the least?\nTransport_Metro &lt;- USAGE |&gt; filter(month == “2019-10-1”) |&gt; group_by(Metro_Area) |&gt; summarize(most_metro = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) topmetro &lt;- Transport_Metro |&gt; slice_max(most_metro, n=1) print(topmetro)\ntopmetro &lt;- Transport_Metro |&gt; slice_min(most_metro, n=1) print(topmetro)\n\nOn the busiest day of the year for Vehicle Revenue Miles, New York–Jersey City–Newark, NY–NJ contributed the most with 87400676 miles.\n\n\nHowever, Decatur, AL contributed the least, with only 25944 miles.\n#Task 5"
  },
  {
    "objectID": "mp01.html#introduction",
    "href": "mp01.html#introduction",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "This project was taken as inspiration from a YouTuber City Nerd, who created a video about the “10 Transit Services That Do Huge Numbers at the Farebox”. Farebox Recovery is the fraction of revenues raised from fares instead of taxes.\nFor this project, we will use data from the National Transit Database as our primary source. The following tables/reports will be used:\n\nThe 2022 Fare Revenue table, in which we will mostly explore revenue.\nThe lastest Monthly Ridership tables, in which we will mostly explore the Unlinked Passenger Trips (UPT) and Vehicle Revenue Miles (VRM).\nThe 2022 Operating Expenses reports, in which we will mostly explore expenses.\n\nWe will use the 2022 verson of all reports, as up-to-date data and newer reports are often uploaded on a lag."
  },
  {
    "objectID": "index.html#my-dogs",
    "href": "index.html#my-dogs",
    "title": "My Website",
    "section": "My Dogs!",
    "text": "My Dogs!\nI have two dogs! Their names are:\n\nMacaroni\n\nMacaroni (Mack) is technically my brother’s dog, but we babysit him while he’s at work.\nHe is a Golden Retreiver and is 2 years old!\n\n\nRusty\n\nRusty is extremely loving and the smartest dog I have ever met.\nHe is a Pitbull/Lab mix and is 13 years old (we think, he’s a rescue)!"
  },
  {
    "objectID": "mp01.html#getting-started",
    "href": "mp01.html#getting-started",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "First, we must download, clean, and join the tables.\nUnfortunately, the code that allowed the immediate download of the data sets did not work for me. So instead, I had to download the data and import it into R, which is seen in my code below.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\nlibrary(readr)\n\nFARES &lt;- read_excel(\"Miniproject001/2022 Fare Revenue (1).xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`) |&gt;\n  group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`\n           `Agency Name`,  # These are direct operated and sub-contracted \n           `Mode`) |&gt;      # of the same transit modality\n  # Not a big effect in most munis (significant DO\n  # tends to get rid of sub-contractors), but we'll sum\n  # to unify different passenger experiences\n  summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency Name'. You can override\nusing the `.groups` argument.\n\nEXPENSES &lt;- read_csv(\"Miniproject001/2022_NTD_Annual_Data_-_Operating_Expenses__by_Function__20231102.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nRows: 3744 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (9): Agency, City, State, Organization Type, Reporter Type, UZA Name, M...\ndbl (13): NTD ID, Report Year, UACE Code, Primary UZA Population, Agency VOM...\nlgl  (7): Vehicle Operations Questionable, Vehicle Maintenance Questionable,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n`summarise()` has grouped output by 'NTD ID'. You can override using the `.groups` argument.\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\nNow, we must extract the monthly transit numbers. My computer struggled to read the whole file for ridership, so I split it into two respective files, one for UPT and one for VRM. This is seen in my code below.\n\nTRIPS &lt;- read_excel(\"Miniproject001/Ridership_UPT.xlsx\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"UPT\") |&gt;\n  drop_na() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\n\nMILES &lt;- read_excel(\"Miniproject001/Ridership_VRN.xlsx\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"VRM\") |&gt;\n  drop_na() |&gt;\n  group_by(`NTD ID`, `Agency`, `UZA Name`, \n           `Mode`, `3 Mode`, month) |&gt;\n  summarize(VRM = sum(VRM)) |&gt;\n  ungroup() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'UZA Name', 'Mode', '3\nMode'. You can override using the `.groups` argument.\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`))\n\nJoining with `by = join_by(`NTD ID`, Agency, `UZA Name`, Mode, `3 Mode`,\nmonth)`\n\n\nNow, this creates the table as follows:\n\nif(!require(\"DT\")) install.packages(\"DT\")\n\nLoading required package: DT\n\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "mp01.html#task-1--creating-syntatic-names",
    "href": "mp01.html#task-1--creating-syntatic-names",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "Here, I decided to rename three of the columns in my table, one to remove spaces so it is easier to manipulate in code, and the other to have more common names for easier understanding. Thus, I wanted:\n\n“UZA Name” to become “Metro_Area”\n“UPT” to become “Unlinked_Passenger_Trips”\n“VRM” to become “Vehicle Revenue Miles”\n\nSo, I did this with the following code:\n\ncolnames(USAGE)[colnames(USAGE) == \"UZA Name\"] &lt;- \"Metro_Area\"\ncolnames(USAGE)[colnames(USAGE) == \"UPT\"] &lt;- \"Unlinked_Passenger_Trips\"\ncolnames(USAGE)[colnames(USAGE) == \"VRM\"] &lt;- \"Vehicle_Revenue_Miles\"\n\nAnd then I reloaded my table to see if the columns changed/looked good. They did!\n\nlibrary(DT)\n\nsample_n(USAGE, 1) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "mp01.html#task-1-creating-syntatic-names",
    "href": "mp01.html#task-1-creating-syntatic-names",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "Here, I decided to rename three of the columns in my table, one to remove spaces so it is easier to manipulate in code, and the other to have more common names for easier understanding. Thus, I wanted:\n\n“UZA Name” to become “Metro_Area”\n“UPT” to become “Unlinked_Passenger_Trips”\n“VRM” to become “Vehicle Revenue Miles”\n\nSo, I did this with the following code:\n\ncolnames(USAGE)[colnames(USAGE) == \"UZA Name\"] &lt;- \"Metro_Area\"\ncolnames(USAGE)[colnames(USAGE) == \"UPT\"] &lt;- \"Unlinked_Passenger_Trips\"\ncolnames(USAGE)[colnames(USAGE) == \"VRM\"] &lt;- \"Vehicle_Revenue_Miles\"\n\nAnd then I reloaded my table to see if the columns changed/looked good. They did!\n\nlibrary(DT)\n\nsample_n(USAGE, 1) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "mp01.html#task-2-recording-the-mode-column",
    "href": "mp01.html#task-2-recording-the-mode-column",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "First, I needed to know what the unique codes were used in the Mode column in our data set. To do this, I ran the following command, which produced the following 18 codes:\n\ndistinct(USAGE, Mode)\n\n# A tibble: 18 × 1\n   Mode \n   &lt;chr&gt;\n 1 DR   \n 2 FB   \n 3 MB   \n 4 SR   \n 5 TB   \n 6 VP   \n 7 CB   \n 8 RB   \n 9 LR   \n10 YR   \n11 MG   \n12 CR   \n13 AR   \n14 TR   \n15 HR   \n16 IP   \n17 PB   \n18 CC   \n\n\nUsing the Glossary on the National Transit Database website, I forced search each of these codes to find their corresponding name. Then, I recoded my table to display these names.\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))\n\nThus, my cleaned-up table became:\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "mp01.html#task-3-answering-the-intructor-specified-questions-with-dplyr.",
    "href": "mp01.html#task-3-answering-the-intructor-specified-questions-with-dplyr.",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "What transit agency had the most total VRM in our data set?\n\n\ntotal_vrm_agency &lt;- USAGE |&gt; \n  group_by(`Agency`) |&gt; \n  summarize(VRM = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt;\n  arrange(desc(VRM))\n  tvrm &lt;- total_vrm_agency |&gt;\n    slice_max(VRM, n = 1)\n  print(tvrm)\n\n# A tibble: 1 × 2\n  Agency                            VRM\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 MTA New York City Transit 10832855350\n\n\nThus, the transit agency that had the most total VRM in our data set was MTA New York City Transit, with a Vehicle Revenue Miles of 10832855350. This makes sense, as public transit easily spans the entirety of New York City, whether it be the subway, buses, the ferry, or more. Since public transit is prevalent in our lives as New Yorkers, with many not even owning their own vehicle and solely relying on public transit, it is understandable that NYC is top of the list.\n\nWhat transit mode had the most total VRM in our data set?\n\n\n  total_vrm_mode &lt;- USAGE |&gt; \n    group_by(`Mode`) |&gt; \n    summarize(M = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) |&gt;\n    arrange(desc(M))\n    topmode &lt;- total_vrm_mode |&gt;\n      slice_max(M, n = 1)\n    print(topmode)\n\n# A tibble: 1 × 2\n  Mode            M\n  &lt;chr&gt;       &lt;dbl&gt;\n1 Bus   49444494088\n\n\nThe transit mode that had the most total VRM in our data set was the BUS, with a Vehicle Revenue Miles of 49444494088.\n\nHow many trips were taken on the NYC subway (Heavy Rail) in May 2024?\n\n\n    May24Subway &lt;- USAGE |&gt;\n      filter(Mode == \"Heavy Rail\", month &gt;= \"2024-05-01\", month &lt;= \"2024-05-31\") |&gt;\n      summarize(may_sub = sum(Unlinked_Passenger_Trips, na.rm = TRUE))\n    \n    print(May24Subway)\n\n# A tibble: 1 × 1\n    may_sub\n      &lt;dbl&gt;\n1 237383777\n\n\nSo, in May 2024, 237383777 unlinked passenger trips were taken on the NYC subway (Heavy Rail). Again, I believe that this checks out, especially with the way many New Yorkers rely on the subway to get around Manhatten during the work day.\n\nHow much did NYC subway ridership fall between April 2019 and April 2020?\n\n\n  april_19_to_20 &lt;- USAGE |&gt;\n      filter(Mode == \"Heavy Rail\", \n             (month &gt;= \"2019-04-01\" & month &lt;= \"2019-04-30\") |\n             (month &gt;= \"2020-04-01\" & month &lt;= \"2020-04-30\"))|&gt;\n      group_by(month) |&gt;\n      summarize(aprupt = sum(Unlinked_Passenger_Trips, na.rm = TRUE)) |&gt;\n      summarize(april_difference = \n            sum(aprupt[month &gt;= \"2020-04-01\" & month &lt;= \"2020-04-30\"]) - \n            sum(aprupt[month &gt;= \"2019-04-01\" & month &lt;= \"2019-04-30\"]))\n    \n    print(april_19_to_20)\n\n# A tibble: 1 × 1\n  april_difference\n             &lt;dbl&gt;\n1       -296416858\n\n\nHere, we can see that 296416858 less riders used the NYC Subway in April 2020 than April 2019. This makes a lot of sense, as April 2020 was the true start of lock down we faced because of the Covid-19 Pandemic. Whether riders were terrified to leave their homes in fear of contracting the virus or they were listening to the mandate to stay inside unless it is for an emergency, it is not a shock that the MTA had almost 300 million less riders in comparison.\nTo further prove this point, let’s consider the same comparison, but for May 2019 and May 2020.\n\n  may_19_to_20 &lt;- USAGE |&gt;\n      filter(Mode == \"Heavy Rail\", \n             (month &gt;= \"2019-05-01\" & month &lt;= \"2019-05-31\") |\n             (month &gt;= \"2020-05-01\" & month &lt;= \"2020-05-31\"))|&gt;\n      group_by(month) |&gt;\n      summarize(mayupt = sum(Unlinked_Passenger_Trips, na.rm = TRUE)) |&gt;\n      summarize(may_difference = \n            sum(mayupt[month &gt;= \"2020-05-01\" & month &lt;= \"2020-05-31\"]) - \n            sum(mayupt[month &gt;= \"2019-05-01\" & month &lt;= \"2019-05-31\"]))\n    \n    print(may_19_to_20)\n\n# A tibble: 1 × 1\n  may_difference\n           &lt;dbl&gt;\n1     -295050652\n\n\nThe month of May also experienced close to 300 million less riders in May 2020 than May 2019. I am sure if we were to investigate the following months as well, we would come to a similar conclusion. It is truly interesting to see the major impact that the pandemic caused in such a short period of time!"
  },
  {
    "objectID": "mp01.html#task-4-explore-and-analyze",
    "href": "mp01.html#task-4-explore-and-analyze",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "What Metro Area has the most total amount of Unlinked Passenger Trips? Do they also have the most total Vehicle Revenue Miles?\n\n\n    Total_UPT &lt;- USAGE |&gt; \n    group_by(`Metro_Area`) |&gt; \n    summarize(most_trips = sum(`Unlinked_Passenger_Trips`, na.rm = TRUE)) |&gt;\n    arrange(desc(most_trips))\n  topupt &lt;- Total_UPT |&gt;\n    slice_max(most_trips, n = 1)\nprint(topupt)\n\n# A tibble: 1 × 2\n  Metro_Area                             most_trips\n  &lt;chr&gt;                                       &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ 84020935224\n\nTotal_VRM_MA &lt;- USAGE |&gt; \n  group_by(`Metro_Area`) |&gt; \n  summarize(most_miles = sum(`Vehicle_Revenue_Miles`, na.rm = TRUE)) |&gt;\n  arrange(desc(most_miles))\ntop_vrm_ma &lt;- Total_VRM_MA |&gt;\n  slice_max(most_miles, n = 1)\nprint(top_vrm_ma)\n\n# A tibble: 1 × 2\n  Metro_Area                             most_miles\n  &lt;chr&gt;                                       &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ 21190345637\n\n\nThe Metro Area that had the most total amount of Unlinked Passenger Trips was New York–Jersey City–Newark, NY–NJ, with 84020935224 trips. This metro area also has the most total Vehicle Revenue Miles, with 21190345637 miles. It is interesting to see that this metro area is dominant on both lists, especially with the NYC MTA also leading other lists prior.\n\nWhat Date had the most total amount of Vehicle Revenue Miles? What date had the least?\n\n\n  Total_date_T &lt;- USAGE |&gt; \n  group_by(`month`) |&gt; \n  summarize(most_date = sum(`Vehicle_Revenue_Miles`, na.rm = TRUE)) |&gt;\n  arrange(desc(most_date))\ntopdate &lt;- Total_date_T |&gt;\n  slice_max(most_date, n = 1)\nprint(topdate)\n\n# A tibble: 1 × 2\n  month      most_date\n  &lt;date&gt;         &lt;dbl&gt;\n1 2019-10-01 449683378\n\nTotal_date_L &lt;- USAGE |&gt; \n  group_by(`month`) |&gt; \n  summarize(least_date = sum(`Vehicle_Revenue_Miles`, na.rm = TRUE)) |&gt;\n  arrange(desc(least_date))\nlowdate &lt;- Total_date_L |&gt;\n  slice_min(least_date, n = 1)\nprint(lowdate)\n\n# A tibble: 1 × 2\n  month      least_date\n  &lt;date&gt;          &lt;dbl&gt;\n1 2020-04-01  255564356\n\n\nThe date with the most total Vehicle Revenue Miles is October 1, 2019. The date with the least is April 1, 2020. Though I am unsure why October 1, 2019 was a popular date to travel, as there was no holidays or world events happen that day, it makes sense why April 1, 2020 was the lowest, due to COVID.\n\nWhich Metro Area contributed the most to the busiest day of the year in regard to Unlinked Passenger Trips? ? Which contributed the least?\n\n\n Transport_Metro &lt;- USAGE |&gt;\n  filter(month == \"2019-10-1\") |&gt;\n  group_by(Metro_Area) |&gt;\n  summarize(most_metro = sum(Vehicle_Revenue_Miles, na.rm = TRUE)) \n  topmetro &lt;- Transport_Metro |&gt; \n  slice_max(most_metro, n=1)\nprint(topmetro)\n\n# A tibble: 1 × 2\n  Metro_Area                            most_metro\n  &lt;chr&gt;                                      &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ   87400676\n\ntopmetro &lt;- Transport_Metro |&gt; \n  slice_min(most_metro, n=1)\nprint(topmetro) \n\n# A tibble: 1 × 2\n  Metro_Area  most_metro\n  &lt;chr&gt;            &lt;dbl&gt;\n1 Decatur, AL      25944\n\n\nOn the busiest day of the year for Vehicle Revenue Miles, New York–Jersey City–Newark, NY–NJ contributed the most with 87400676 miles. However, Decatur, AL contributed the least, with only 25944 miles. The New York–Jersey City–Newark, NY–NJ area providing the most to this list is not shocking, as it is also the leader on the list for total VRM."
  },
  {
    "objectID": "mp01.html#task-5-table-summarization",
    "href": "mp01.html#task-5-table-summarization",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "Now, we will create a new table from USAGE that also has annual total UPT and VRM for 2022.\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(year(month) == 2022) |&gt;\n  group_by(`NTD ID`, Agency, Metro_Area, Mode, Unlinked_Passenger_Trips, Vehicle_Revenue_Miles) |&gt;\n  summarize(UPT = sum(Unlinked_Passenger_Trips, na.rm = TRUE),\n           VRM = sum(Vehicle_Revenue_Miles, na.rm = TRUE)\n  ) |&gt; \n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'Metro_Area', 'Mode',\n'Unlinked_Passenger_Trips'. You can override using the `.groups` argument.\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n                                  FINANCIALS,\n                                  join_by(`NTD ID`, Mode)) |&gt;\n  drop_na()\n\nWhen I attempted to run the given code the first time, I discovered that the tables were not joining together with all of their values. I quickly realized that this was because the Modes in the Financial table was still known as their short names. For example, the “Heavy Rail” was still referred to as “HR”. Thus, I ran the same code that we did on the USAGE table earlier to manipulate these codes to reflect their proper names. After this, the table formed with no issue.\n\nsample_n(USAGE_AND_FINANCIALS, 1000) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "mp01.html#task-6-farebox-recovery-among-major-systems",
    "href": "mp01.html#task-6-farebox-recovery-among-major-systems",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "Which transit system (agency and mode) had the most UPT in 2022?\n\n\nMTSUPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(mosttsupt = sum(UPT, na.rm = TRUE)) |&gt;\n  arrange(desc(mosttsupt))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(MTSUPT)\n\n# A tibble: 1,129 × 3\n# Groups:   Agency [525]\n   Agency                                                   Mode       mosttsupt\n   &lt;chr&gt;                                                    &lt;chr&gt;          &lt;dbl&gt;\n 1 MTA New York City Transit                                Heavy Rail    1.79e9\n 2 MTA New York City Transit                                Bus           4.59e8\n 3 Los Angeles County Metropolitan Transportation Authority Bus           1.94e8\n 4 Chicago Transit Authority                                Bus           1.40e8\n 5 New Jersey Transit Corporation                           Bus           1.13e8\n 6 Chicago Transit Authority                                Heavy Rail    1.04e8\n 7 MTA Bus Company                                          Bus           1.00e8\n 8 Washington Metropolitan Area Transit Authority           Heavy Rail    9.84e7\n 9 Southeastern Pennsylvania Transportation Authority       Bus           9.66e7\n10 Washington Metropolitan Area Transit Authority           Bus           8.99e7\n# ℹ 1,119 more rows\n\n\nThe transit system, agency and mode, that had the most UPT in 2022 was the MTA New York City Transit with their Heavy Rail, with a total UPT of 1793073801. This number is way larger than the following on the list, which interestly enough also belongs to the MTA New York City transit and their Bus system.\n\nWhich transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\n\n\ncolnames(USAGE_AND_FINANCIALS)[colnames(USAGE_AND_FINANCIALS) == \"Total Fares\"] &lt;- \"Total_Fares\"\n\nhighest_farebox &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter( UPT &gt;= 400000) |&gt;\n  mutate(farebox_rate = Total_Fares/Expenses) |&gt; \n  group_by(Agency, Mode) |&gt;\n  summarize(highest_ratio = max (farebox_rate)) |&gt;\n  arrange(desc(highest_ratio))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(highest_farebox)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                    Mode  highest_ratio\n   &lt;chr&gt;                                                     &lt;chr&gt;         &lt;dbl&gt;\n 1 Anaheim Transportation Network                            Bus           0.865\n 2 City of Gainesville, FL                                   Bus           0.548\n 3 MTA New York City Transit                                 Heav…         0.435\n 4 Massachusetts Bay Transportation Authority                Heav…         0.375\n 5 Woods Hole, Martha's Vineyard and Nantucket Steamship Au… Ferr…         0.335\n 6 Metro-North Commuter Railroad Company, dba: MTA Metro-No… Comm…         0.331\n 7 Centre Area Transportation Authority                      Bus           0.324\n 8 MTA Long Island Rail Road                                 Comm…         0.286\n 9 Southeastern Pennsylvania Transportation Authority        Heav…         0.253\n10 Regional Transportation Commission of Southern Nevada     Bus           0.252\n# ℹ 136 more rows\n\n\nHere, we can clearly see that the transit system with the highest farebox recovery is Anaheim Transportation Network with their bus transportation. The fairbox recovery for each transit system is found by dividing their Total Fares by their Expenses. Interestingly enough, Anaheim Transportation Network and their buses have a ratio of .865, which is about a 57% greater than the second place spot, which is the City of Gainesville, FL with their buses!\n\nWhich transit system (agency and mode) has the lowest expenses per UPT?\n\n\nlow_expense_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter( UPT &gt;= 400000) |&gt;\n  mutate(exp_p_upt = Expenses/UPT) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(lowest_exp_p_upt = min(exp_p_upt)) |&gt;\n  arrange(lowest_exp_p_upt)\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(low_expense_UPT)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                 Mode  lowest_exp_p_upt\n   &lt;chr&gt;                                                  &lt;chr&gt;            &lt;dbl&gt;\n 1 Anaheim Transportation Network                         Bus               12.8\n 2 University of Georgia                                  Bus               14.9\n 3 University of Michigan Parking and Transportation Ser… Bus               16.2\n 4 Town of Blacksburg                                     Bus               17.5\n 5 Ames Transit Agency                                    Bus               21.5\n 6 Centre Area Transportation Authority                   Bus               23.5\n 7 MTA New York City Transit                              Heav…             31.1\n 8 Greater Lafayette Public Transportation Corporation    Bus               31.5\n 9 San Diego Metropolitan Transit System                  Ligh…             31.6\n10 Champaign-Urbana Mass Transit District                 Bus               39.8\n# ℹ 136 more rows\n\n\nSimilar to the last inquiry , the transit system that has the lowest expenses per UPT is Anaheim Transportation Network with their bus transportation. Their ratio of expenses per UPT is 12.8, which is drastically less than the highest. The highest expense per UPT is Northeast Illinois Regional Commuter Railroad Corporation and their Cable Cars, with a ratio of 600, which is an extreme difference between the two.\n\nWhich transit system (agency and mode) has the highest total fares per UPT?\n\n\nhigh_fare_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 400000) |&gt;\n  mutate(totalfares_p_upt = (Total_Fares/UPT)) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(high_fare_p_upt = max(totalfares_p_upt)) |&gt;\n  arrange(desc(high_fare_p_upt))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(high_fare_UPT)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                  Mode  high_fare_p_upt\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;dbl&gt;\n 1 New Jersey Transit Corporation                          Bus             536. \n 2 Northeast Illinois Regional Commuter Railroad Corporat… Comm…           265. \n 3 Metro-North Commuter Railroad Company, dba: MTA Metro-… Comm…           161. \n 4 New Jersey Transit Corporation                          Comm…           119. \n 5 MTA New York City Transit                               Comm…           112. \n 6 Massachusetts Bay Transportation Authority              Bus             107. \n 7 Massachusetts Bay Transportation Authority              Comm…            84.4\n 8 Woods Hole, Martha's Vineyard and Nantucket Steamship … Ferr…            78.0\n 9 MTA Long Island Rail Road                               Comm…            73.9\n10 Peninsula Corridor Joint Powers Board                   Comm…            67.5\n# ℹ 136 more rows\n\n\nThe transit system with the highest total fares per UPT is New Jersey Transit Corporation and their buses, with a total fare of 536 to one Unlinked Passenger Trip. This is more than double the second place spot, which goes to Northeast Illinois Regional Commuter Railroad Corporation and their Commuter Bus, with a total fare of 265 to one Unlinked Passenger Trip.\n\nWhich transit system (agency and mode) has the lowest expenses per VRM?\n\nInterestingly enough, I had to change my “Expenses” column name to “expense” for my code to recognize the column instead of the table we established prior, hence the reasoning for that code below.\n\ncolnames(USAGE_AND_FINANCIALS)[colnames(USAGE_AND_FINANCIALS) == \"Expenses\"] &lt;- \"expense\"\n\nlow_exp_vrm&lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 400000) |&gt;\n  mutate(exp_p_vrm = (expense/VRM)) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(low_exp_p_vrm = min(exp_p_vrm)) |&gt; \n  arrange(low_exp_p_vrm) \n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(low_exp_vrm)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                              Mode       low_exp_p_vrm\n   &lt;chr&gt;                                               &lt;chr&gt;              &lt;dbl&gt;\n 1 Interurban Transit Partnership                      Bus                 77.2\n 2 City of El Paso                                     Bus                 85.8\n 3 Des Moines Area Regional Transit Authority          Bus                 86.3\n 4 Central Florida Regional Transportation Authority   Bus                 87.5\n 5 San Francisco Bay Area Rapid Transit District       Heavy Rail          88.8\n 6 Transportation District Commission of Hampton Roads Bus                 88.9\n 7 City of Gainesville, FL                             Bus                 90.1\n 8 Greater Lafayette Public Transportation Corporation Bus                 90.5\n 9 Ames Transit Agency                                 Bus                 92.0\n10 Delaware Transit Corporation                        Bus                 92.4\n# ℹ 136 more rows\n\n\nThe transit system with the lowest expenses per Vehicle Revenue Miles was Interurban Transit Partnership and their Bus transportation, with an expense of 77.2 per Vehicle Revenue Mile. This is far cheaper than the leader of this category, which is the New York City Department of Transportation and their Ferryboat, with an expense of 771 per vehicle revenue mile. Interestingly enough, out of the ten highest expenses on the list, nine of the most expensive Modes of transportation is the Ferryboat, with only the Cable Car in San Francisco coming in at fourth. This shows that a Ferryboat is most-likely the most expensive transportation mode for transit agencies to run in comparison to its vehicle revenue miles.\n\nWhich transit system (agency and mode) has the highest total fares per VRM?\n\n\nhigh_fare_VRM &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 400000) |&gt;\n  mutate(totalfares_p_vrm = (Total_Fares/VRM)) |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(high_fare_p_vrm = max(totalfares_p_vrm)) |&gt;\n  arrange(desc(high_fare_p_vrm))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nprint(high_fare_VRM)\n\n# A tibble: 146 × 3\n# Groups:   Agency [112]\n   Agency                                                  Mode  high_fare_p_vrm\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;dbl&gt;\n 1 Washington State Ferries                                Ferr…          1120. \n 2 Woods Hole, Martha's Vineyard and Nantucket Steamship … Ferr…           829. \n 3 New York City Economic Development Corporation          Ferr…           188. \n 4 Anaheim Transportation Network                          Bus             170. \n 5 Massachusetts Bay Transportation Authority              Ligh…           131. \n 6 Port Authority Trans-Hudson Corporation                 Heav…           119. \n 7 Massachusetts Bay Transportation Authority              Heav…           101. \n 8 MTA Long Island Rail Road                               Comm…            98.6\n 9 Metro-North Commuter Railroad Company, dba: MTA Metro-… Comm…            94.4\n10 MTA New York City Transit                               Heav…            91.5\n# ℹ 136 more rows\n\n\nThe transit system with the highest total fares per vehicle revenue miles is Washington State Ferries, with a ratio of 1120 total fares to one vehicle revenue mile. An interesting correlation to the last inquiry is that the top three highest total fares per VRM belong to ferryboats. Furthermore, the highest value on the list is almost 500% greater than the third value, which is 188, and that percentage only grows as that list goes further down."
  },
  {
    "objectID": "mp01.html#conclusion",
    "href": "mp01.html#conclusion",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "In regard to what transit system in the country is the most effective, it depends on which data points you use to weigh your opinion. If you are considering which system has the highest values in URM and UPT, meaning it is the most frequently used, the answer would be the major transit system of NYC’s MTA Transit. Not only is its heavy rail system extremely prevalent in these numbers, which makes sense since numerous rails span the lengths of New York City and are used daily by many, but the NYC MTA Bus also holds rank compared to others.\nHowever, if you are considering which transit system is the most cost effective, it would have to be the Anaheim Transportation Network. Since a high farebox recovery ratio indicates that a transit system is profitable, Anaheim Transportation Network bus’ numbers alone show that this system is highly more profitable than the rest. This agency also leads margin of lowest expenses per unlinked passenger trip, which shows that not only is this system great at making money, it also great at retaining it and not spending the majority of it on expenses. However, while this is great from a business standpoint, as a passenger this transportation agency ranks high on the total fares per vehicle revenue mile scale, as it is in 4th place. This means that this transportation is fairly expensive to ride compared to the others.\nIn my opinion, I believe that the MTA New York City Transit is the most effective in the country, due to the enormous scale it can run on at a moderate price compared to other agencies."
  },
  {
    "objectID": "mp01.html#introduction-farebox-recovery",
    "href": "mp01.html#introduction-farebox-recovery",
    "title": "Mini Project 01: Fiscal Characterisitics of Major US Public Transit Systems",
    "section": "",
    "text": "This project was taken as inspiration from a YouTuber City Nerd, who created a video about the “10 Transit Services That Do Huge Numbers at the Farebox”. Farebox Recovery is the fraction of revenues raised from fares instead of taxes.\nFor this project, we will use data from the [National Transit Database] as our primary source. The following tables/reports will be used:\n\nThe 2022 Fare Revenue table, in which we will mostly explore revenue.\nThe lastest Monthly Ridership tables, in which we will mostly explore the Unlinked Passenger Trips (UPT) and Vehicle Revenue Miles (VRM).\nThe 2022 Operating Expenses reports, in which we will mostly explore expenses.\n\nWe will use the 2022 verson of all reports, as up-to-date data and newer reports are often uploaded on a lag."
  }
]